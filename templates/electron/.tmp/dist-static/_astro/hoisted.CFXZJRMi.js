var g={rules:{stringify:[{match:e=>typeof e=="bigint",handler:e=>`t!bigint:${e.toString()}`},{match:e=>e instanceof Date,handler:e=>`t!Date:${e.toISOString()}`},{match:e=>e instanceof URL,handler:e=>`t!URL:${e.toString()}`},{match:e=>e instanceof RegExp,handler:e=>`t!RegExp:${e.toString()}`},{match:e=>e instanceof Uint8Array,handler:e=>`t!Uint8Array:${new TextDecoder().decode(e)}`},{match:e=>e instanceof ArrayBuffer,handler:e=>`t!ArrayBuffer:${new TextDecoder().decode(e)}`}],parse:[{match:e=>e.startsWith("t!bigint:"),handler:e=>BigInt(e.slice(9))},{match:e=>e.startsWith("t!Date:"),handler:e=>new Date(e.slice(7))},{match:e=>e.startsWith("t!URL:"),handler:e=>new URL(e.slice(6))},{match:e=>e.startsWith("t!RegExp:"),handler:e=>new RegExp(e.slice(9))},{match:e=>e.startsWith("t!Uint8Array:"),handler:e=>new TextEncoder().encode(e.slice(13))},{match:e=>e.startsWith("t!ArrayBuffer:"),handler:e=>new TextEncoder().encode(e.slice(14)).buffer}]},stringify(e){return JSON.stringify(g.encode(e))},parse(e){return g.decode(JSON.parse(e))},encode(e){function r(t){if(!t||typeof t!="object"&&typeof t!="bigint")return t;if(t){if(Array.isArray(t)){const d=[];for(let f=0;f<t.length;f++)d[f]=r(t[f]);return d}}else return t;for(let d of g.rules.stringify)if(d.match(t))return d.handler(t);const i={};for(var c in t)i[c]=r(t[c]);return i}return r(e)},decode(e){function r(t){if(Array.isArray(t))return t.map(r);if(typeof t=="object"&&t!==null){const i={};for(let c in t)t.hasOwnProperty(c)&&(i[c]=r(t[c]));return i}else if(typeof t=="string"){for(let i of g.rules.parse)if(i.match(t)===!0)return i.handler(t);return t}return t}return r(e)}};async function P(e,r){const t=e.getReader();let i;for(;!(i=await t.read()).done;)r(i.value)}function W(e){let r,t,i,c=!1;return function(f){r===void 0?(r=f,t=0,i=-1):r=U(r,f);const w=r.length;let o=0;for(;t<w;){c&&(r[t]===v.NewLine&&(o=++t),c=!1);let n=-1;for(;t<w&&n===-1;++t)switch(r[t]){case v.Colon:i===-1&&(i=t-o);break;case v.CarriageReturn:c=!0;case v.NewLine:n=t;break}if(n===-1)break;e(r.subarray(o,n),i),o=t,i=-1}o===w?r=void 0:o!==0&&(r=r.subarray(o),t-=o)}}function N(e){let r=S();const t=new TextDecoder;return function(c,d){if(c.length===0)e?.(r),r=S();else if(d>0){const f=t.decode(c.subarray(0,d)),w=d+(c[d+1]===v.Space?2:1),o=t.decode(c.subarray(w));switch(f){case"data":r.data=r.data?r.data+`
`+o:o;break}}}}var U=function(e,r){const t=new Uint8Array(e.length+r.length);return t.set(e),t.set(r,e.length),t},S=function(){return{data:""}},k=e=>r=>{const t=r.fetch??fetch,i=r.abort??AbortController,c=[],d=[],f=[];r.storage||(r.storage=localStorage);const w=(async()=>{let o=r.baseUrl;if(typeof o=="function"&&(o=await o()),o.endsWith("/")||(o=`${o}/`),r.middlewares){const n=[...e,...r.middlewares()],y=(a,s,R)=>{const m=++O;return s.push({id:m,index:a,middleware:R}),()=>s.splice(s.findIndex(b=>b.id===m),1)},x=(a,s)=>{s.bootstrap&&y(a,c,s.bootstrap),s.beforeExecute&&y(a,d,s.beforeExecute),s.afterExecute&&y(a,f,s.afterExecute)};for(let a=0;a<n.length;a++){const s=n[a];x(a,s)}c.sort((a,s)=>a.index-s.index),d.sort((a,s)=>a.index-s.index),f.sort((a,s)=>s.index-a.index);for(let a of c)await a.middleware({storage:r.storage})}return o})();return{async execute(o,n){n.headers===void 0&&(n.headers={});const y=await w+o;n.headers.Accept===void 0&&(n.headers.Accept="application/json"),n.headers["Content-Type"]===void 0&&(n.headers["Content-Type"]="application/json");for(let s of d)await s.middleware({path:o,params:n.params,headers:n.headers,storage:r.storage});const x=g.stringify(n.params)??"";let a;try{const s=await new Promise(async(R,m)=>{const b=n?.timeout??r?.timeout??6e3,u=setTimeout(()=>{m(L("execute-timeout",`Execute timeout after ${b}ms.`))},b);try{const T=await(await t(y,{method:"POST",body:x,headers:n.headers})).text();clearTimeout(u),R(T)}catch(T){m(T)}});a={value:g.parse(s)}}catch{return a={value:{success:!1,fail:{fromClient:!0,code:"NETWORK_ERROR",message:"",data:void 0}}},{...a.value}}for(let s of f)await s.middleware({path:o,storage:r.storage,result:a});return{...a.value}},executeStream(o,n){n.headers===void 0&&(n.headers={}),n.headers={...n.headers},n.headers.Accept===void 0&&(n.headers.Accept="text/event-stream"),n.headers["Content-Type"]===void 0&&(n.headers["Content-Type"]="application/json");const y=async()=>await w+o,x=g.stringify(n.params)??"",a=new Map;let s=0,R=0,m;const b=l=>{if(l.data.startsWith("@")){m=g.parse(l.data.slice(1));return}else{const h=++s;if(a.has(h))a.get(h).resolve({done:!1,value:g.parse(l.data)});else{const p=Promise.withResolvers();p.resolve({done:!1,value:g.parse(l.data)}),a.set(h,p)}}};let u;async function T(){u=new i,u.signal.addEventListener("abort",()=>E.return());try{for(let p of d)await p.middleware({path:o,params:n.params,headers:n.headers,storage:r.storage});const l=await t(await y(),{method:"POST",headers:n.headers,body:x,signal:u.signal}),h=l.headers.get("Content-Type");if(!h?.startsWith("text/event-stream"))throw new Error(`Expected content-type to be text/event-stream, Actual: ${h}`);await P(l.body,W(N(b)));for(let p of f)await p.middleware({path:o,storage:r.storage,result:{value:void 0}});await E.return()}catch(l){u.signal.aborted||u.abort(),await E.throw(l)}}T();const E={next(){const l=++R;if(a.has(l-2)&&a.delete(l-2),a.has(l))return a.get(l).promise;{const h=Promise.withResolvers();return a.set(l,h),h.promise}},async return(){u.signal.aborted||u.abort();for(let[l,h]of a)h.resolve({done:!0,value:void 0});return{done:!0,value:void 0}},async throw(l){m={success:!1,executeId:m?.executeId??"",fail:{code:"NETWORK_ERROR",message:"Network Error",fromClient:!0,data:l}},!u.signal.aborted&&u.abort();for(let[h,p]of a)p.resolve({done:!0,value:void 0});return{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}};return{getResult:()=>m,stream:E}}}},L=(e,r,t)=>({success:!1,fail:{fromClient:!0,code:e,message:r,data:t}}),O=0,v;(function(e){e[e.NewLine=10]="NewLine",e[e.CarriageReturn=13]="CarriageReturn",e[e.Space=32]="Space",e[e.Colon=58]="Colon"})(v||(v={}));const j=k([]),C=new URL(location.href);C.searchParams.has("_milkioServer")||alert("Failed to establish a connection with milkio");const F=j({baseUrl:C.searchParams.get("_milkioServer")??""});setTimeout(async()=>{console.log("ðŸ¥› Try communicating with milkio on the webview");const e=await F.execute("hello-world/say",{params:{by:"milkio"}});console.log("result:",e)},1e3);
//# sourceMappingURL=hoisted.CFXZJRMi.js.map
